Consider compiler define for aarch64

Signed-off-by: Khem Raj <raj.khem@gmail.com>
Upstream-Status:Pending

Index: a2jmidid-8/sigsegv.c
===================================================================
--- a2jmidid-8.orig/sigsegv.c
+++ a2jmidid-8/sigsegv.c
@@ -91,18 +91,18 @@ static void signal_segv(int signum, sigi
     a2j_error("info.si_errno = %d", info->si_errno);
     a2j_error("info.si_code  = %d (%s)", info->si_code, si_codes[info->si_code]);
     a2j_error("info.si_addr  = %p", info->si_addr);
-#if !defined(__alpha__) && !defined(__ia64__) && !defined(__FreeBSD_kernel__) && !defined(__arm__) && !defined(__hppa__) && !defined(__sh__)
+#if !defined(__alpha__) && !defined(__ia64__) && !defined(__FreeBSD_kernel__) && !defined(__arm__) && !defined(__hppa__) && !defined(__sh__) && !defined(__aarch64__)
     for(i = 0; i < NGREG; i++)
         a2j_error("reg[%02d]       = 0x" REGFORMAT, i,
 #if defined(__powerpc__)
                 ucontext->uc_mcontext.uc_regs[i]
-#elif defined(__sparc__) && defined(__arch64__)
+#elif defined(__sparc__) || defined(__arch64__)
                 ucontext->uc_mcontext.mc_gregs[i]
 #else
                 ucontext->uc_mcontext.gregs[i]
 #endif
                 );
-#endif /* alpha, ia64, kFreeBSD, arm, hppa */
+#endif /* alpha, ia64, kFreeBSD, arm, hppa aarch64 */
 
 #if defined(SIGSEGV_STACK_X86) || defined(SIGSEGV_STACK_IA64)
 # if defined(SIGSEGV_STACK_IA64)
