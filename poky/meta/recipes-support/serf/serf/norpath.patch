The RPATH handling in serf is all wrong for us and we don't need it 
anyway so hack around it by removing this for now.

Upstream-Status: Inappropriate

RP 2014/7/17

Index: serf-1.3.9/SConstruct
===================================================================
--- serf-1.3.9.orig/SConstruct
+++ serf-1.3.9/SConstruct
@@ -224,8 +224,7 @@ if sys.platform != 'win32':
 else:
   LIBNAMESTATIC = 'serf-${MAJOR}'
 
-env.Append(RPATH=libdir,
-           PDB='${TARGET.filebase}.pdb')
+env.Append(PDB='${TARGET.filebase}.pdb')
 
 if sys.platform == 'darwin':
 #  linkflags.append('-Wl,-install_name,@executable_path/%s.dylib' % (LIBNAME,))
@@ -385,12 +384,6 @@ if gssapi and CALLOUT_OKAY:
 if sys.platform == 'win32':
   env.Append(CPPDEFINES=['SERF_HAVE_SSPI'])
 
-# On some systems, the -R values that APR describes never make it into actual
-# RPATH flags. We'll manually map all directories in LIBPATH into new
-# flags to set RPATH values.
-for d in env['LIBPATH']:
-  env.Append(RPATH=':'+d)
-
 # Set up the construction of serf-*.pc
 pkgconfig = env.Textfile('serf-%d.pc' % (MAJOR,),
                          env.File('build/serf.pc.in'),
@@ -461,7 +454,6 @@ else:
   TEST_EXES = [ os.path.join('test', '%s' % (prog)) for prog in TEST_PROGRAMS ]
 
 # Find the (dynamic) library in this directory
-tenv.Replace(RPATH=thisdir)
 tenv.Prepend(LIBS=[LIBNAMESTATIC, ],
              LIBPATH=[thisdir, ])
 
