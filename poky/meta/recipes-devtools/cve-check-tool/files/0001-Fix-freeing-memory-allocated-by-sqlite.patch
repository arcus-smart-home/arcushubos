From a3353429652f83bb8b0316500faa88fa2555542d Mon Sep 17 00:00:00 2001
From: Peter Marko <peter.marko@siemens.com>
Date: Thu, 13 Apr 2017 23:09:52 +0200
Subject: [PATCH] Fix freeing memory allocated by sqlite

Upstream-Status: Backport
Signed-off-by: Peter Marko <peter.marko@siemens.com>
---
 src/core.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/core.c b/src/core.c
index 6263031..6788f16 100644
--- a/src/core.c
+++ b/src/core.c
@@ -82,7 +82,7 @@ static bool ensure_table(CveDB *self)
         rc = sqlite3_exec(self->db, query, NULL, NULL, &err);
         if (rc != SQLITE_OK) {
                 fprintf(stderr, "ensure_table(): %s\n", err);
-                free(err);
+                sqlite3_free(err);
                 return false;
         }
         
@@ -91,7 +91,7 @@ static bool ensure_table(CveDB *self)
         rc = sqlite3_exec(self->db, query, NULL, NULL, &err);
         if (rc != SQLITE_OK) {
                 fprintf(stderr, "ensure_table(): %s\n", err);
-                free(err);
+                sqlite3_free(err);
                 return false;
         }
 
@@ -99,11 +99,11 @@ static bool ensure_table(CveDB *self)
         rc = sqlite3_exec(self->db, query, NULL, NULL, &err);
         if (rc != SQLITE_OK) {
                 fprintf(stderr, "ensure_table(): %s\n", err);
-                free(err);
+                sqlite3_free(err);
                 return false;
         }
         if (err) {
-                free(err);
+                sqlite3_free(err);
         }
 
         return true;
-- 
2.1.4

