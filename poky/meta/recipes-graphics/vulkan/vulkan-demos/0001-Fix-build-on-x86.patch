From b0495efb6c3ea3a530fcbaddac86da57ecce5a66 Mon Sep 17 00:00:00 2001
From: Jussi Kukkonen <jussi.kukkonen@intel.com>
Date: Mon, 10 Jul 2017 13:11:12 +0300
Subject: [PATCH] Fix build on x86
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

| func_common.inl:193:51: error: wrong number of template arguments
| (5, should be 6) struct compute_sign<T, P, vecType, false, Aligned>

The fix is backported from the upstream glm project.

Upstream-Status: Pending [https://github.com/SaschaWillems/Vulkan/issues/356]
Signed-off-by: Jussi Kukkonen <jussi.kukkonen@intel.com>
---
 external/glm/glm/detail/func_common.inl | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/external/glm/glm/detail/func_common.inl b/external/glm/glm/detail/func_common.inl
index cafaed5..2dd94e1 100644
--- a/external/glm/glm/detail/func_common.inl
+++ b/external/glm/glm/detail/func_common.inl
@@ -190,12 +190,12 @@ namespace detail
 
 #	if GLM_ARCH == GLM_ARCH_X86
 	template<length_t L, typename T, precision P, template<length_t, typename, precision> class vecType, bool Aligned>
-	struct compute_sign<T, P, vecType, false, Aligned>
+	struct compute_sign<L, T, P, vecType, false, Aligned>
 	{
 		GLM_FUNC_QUALIFIER static vecType<L, T, P> call(vecType<L, T, P> const & x)
 		{
 			T const Shift(static_cast<T>(sizeof(T) * 8 - 1));
-			vecType<L, T, P> const y(vecType<typename make_unsigned<T>::type, P>(-x) >> typename make_unsigned<T>::type(Shift));
+			vecType<L, T, P> const y(vecType<L, typename make_unsigned<T>::type, P>(-x) >> typename make_unsigned<T>::type(Shift));
 
 			return (x >> Shift) | y;
 		}
-- 
2.1.4

