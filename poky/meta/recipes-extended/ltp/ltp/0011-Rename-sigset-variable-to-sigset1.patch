From dc1905b6d972f9176b40da270c83d8fb4d1751b5 Mon Sep 17 00:00:00 2001
From: Dengke Du <dengke.du@windriver.com>
Date: Wed, 8 Feb 2017 16:12:34 +0800
Subject: [PATCH 2/5] Rename sigset variable to sigset1

sigset API from signal.h is shadowed by this name conflict

Signed-off-by: Khem Raj <raj.khem@gmail.com>
Signed-off-by: Dengke Du <dengke.du@windriver.com>

Upstream-Status: Pending
---
 testcases/kernel/mem/shmt/shmt04.c                    | 10 +++++-----
 testcases/kernel/mem/shmt/shmt06.c                    | 10 +++++-----
 testcases/kernel/syscalls/sigprocmask/sigprocmask01.c | 10 +++++-----
 3 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/testcases/kernel/mem/shmt/shmt04.c b/testcases/kernel/mem/shmt/shmt04.c
index b2682da..3f35fad 100644
--- a/testcases/kernel/mem/shmt/shmt04.c
+++ b/testcases/kernel/mem/shmt/shmt04.c
@@ -56,7 +56,7 @@ int TST_TOTAL = 2;		/* Total number of test cases. */
 /**************/
 
 key_t key;
-sigset_t set;
+sigset_t set1;
 
 #define  SIZE  16*1024
 
@@ -71,9 +71,9 @@ int main(void)
 
 	key = (key_t) getpid();
 
-	sigemptyset(&set);
-	sigaddset(&set, SIGUSR1);
-	sigprocmask(SIG_BLOCK, &set, NULL);
+	sigemptyset(&set1);
+	sigaddset(&set1, SIGUSR1);
+	sigprocmask(SIG_BLOCK, &set1, NULL);
 
 	pid = fork();
 	switch (pid) {
@@ -148,7 +148,7 @@ int child(void)
 	char *cp;
 	int sig;
 
-	sigwait(&set, &sig);
+	sigwait(&set1, &sig);
 	chld_pid = getpid();
 /*--------------------------------------------------------*/
 
diff --git a/testcases/kernel/mem/shmt/shmt06.c b/testcases/kernel/mem/shmt/shmt06.c
index dd69de7..56fb1da 100644
--- a/testcases/kernel/mem/shmt/shmt06.c
+++ b/testcases/kernel/mem/shmt/shmt06.c
@@ -57,7 +57,7 @@ int TST_TOTAL = 2;		/* Total number of test cases. */
 /**************/
 
 key_t key;
-sigset_t set;
+sigset_t set1;
 
 int child();
 static int rm_shm(int);
@@ -70,9 +70,9 @@ int main(void)
 
 	key = (key_t) getpid();
 
-	sigemptyset(&set);
-	sigaddset(&set, SIGUSR1);
-	sigprocmask(SIG_BLOCK, &set, NULL);
+	sigemptyset(&set1);
+	sigaddset(&set1, SIGUSR1);
+	sigprocmask(SIG_BLOCK, &set1, NULL);
 
 	pid = fork();
 	switch (pid) {
@@ -147,7 +147,7 @@ int child(void)
 	char *cp;
 	int sig;
 
-	sigwait(&set, &sig);
+	sigwait(&set1, &sig);
 	chld_pid = getpid();
 
 	if ((shmid = shmget(key, SIZE, 0)) < 0) {
diff --git a/testcases/kernel/syscalls/sigprocmask/sigprocmask01.c b/testcases/kernel/syscalls/sigprocmask/sigprocmask01.c
index 232d25a..06d902f 100644
--- a/testcases/kernel/syscalls/sigprocmask/sigprocmask01.c
+++ b/testcases/kernel/syscalls/sigprocmask/sigprocmask01.c
@@ -91,7 +91,7 @@ int TST_TOTAL = 1;
 int sig_catch = 0;		/* variable to blocked/unblocked signals */
 
 struct sigaction sa_new;	/* struct to hold signal info */
-sigset_t set;		/* signal set to hold signal lists */
+sigset_t set1;		/* signal set to hold signal lists */
 sigset_t sigset2;
 
 int main(int ac, char **av)
@@ -112,7 +112,7 @@ int main(int ac, char **av)
 		 * so that, signal will not be delivered to
 		 * the test process.
 		 */
-		TEST(sigprocmask(SIG_BLOCK, &set, 0));
+		TEST(sigprocmask(SIG_BLOCK, &set1, 0));
 
 		/* Get the process id of test process */
 		my_pid = getpid();
@@ -165,7 +165,7 @@ int main(int ac, char **av)
 				 */
 				errno = 0;
 				if (sigprocmask(SIG_UNBLOCK,
-						&set, 0) == -1) {
+						&set1, 0) == -1) {
 					tst_brkm(TFAIL, cleanup,
 						 "sigprocmask() failed "
 						 "to unblock signal, "
@@ -212,7 +212,7 @@ void setup(void)
 	 * Initialise the signal sets with the list that
 	 * excludes/includes  all system-defined signals.
 	 */
-	if (sigemptyset(&set) == -1) {
+	if (sigemptyset(&set1) == -1) {
 		tst_brkm(TFAIL, cleanup,
 			 "sigemptyset() failed, errno=%d : %s",
 			 errno, strerror(errno));
@@ -235,7 +235,7 @@ void setup(void)
 	 * Add specified signal (SIGINT) to the signal set
 	 * which excludes system-defined signals.
 	 */
-	if (sigaddset(&set, SIGINT) == -1) {
+	if (sigaddset(&set1, SIGINT) == -1) {
 		tst_brkm(TFAIL, cleanup,
 			 "sigaddset() failed, errno=%d : %s",
 			 errno, strerror(errno));
-- 
2.7.4

